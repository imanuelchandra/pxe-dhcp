# For information on valid values for option arch, see these links:
# https://git.ipxe.org/ipxe.git/commitdiff/af9afd0a86aeac1eed28b5028c3de669515fc7fc
# https://git.ipxe.org/ipxe.git/blob/HEAD:/src/include/ipxe/dhcp.h#l275
# https://www.rfc-editor.org/errata_search.php?rfc=4578
#
# I like to use native iPXE drivers (they're faster and more stable), so
# give ipxe.pxe/ipxe.efi to all non-iPXE clients, use undionly.kpxe/snponly.efi
# only if you have unsupported or misbehaving NICs.

allow bootp;
allow booting;

next-server 192.168.10.2; # core.smidsrod.lan

# Disable ProxyDHCP, we're in control of the primary DHCP server
option ipxe.no-pxedhcp 1;
option tftp-server-name "192.168.10.2";
# option bootfile-name "ipxe.kpxe";

# if exists ipxe.http
#           and exists ipxe.menu
#           and (
#                 ( exists ipxe.pxe
#               and exists ipxe.bzimage
#               and exists ipxe.elf
#               and exists ipxe.comboot   # NB: not enabled in iPXE by default
#               and exists ipxe.iscsi
#                 ) or (
#                   exists ipxe.efi
#                 )
#               ) {
#         filename "http://192.168.10.2/boot.ipxe";
# }

if exists ipxe.tftp
   and exists ipxe.menu
   and (
          ( exists ipxe.pxe
        and exists ipxe.bzimage
        and exists ipxe.elf
        and exists ipxe.comboot   # NB: not enabled in iPXE by default
        and exists ipxe.iscsi
          ) or (
            exists ipxe.efi
          )
        ) {
        filename "boot.ipxe";

} elsif exists ipxe.nfs
  and exists ipxe.menu
  and (
        ( exists ipxe.pxe
      and exists ipxe.bzimage
      and exists ipxe.elf
      and exists ipxe.comboot   # NB: not enabled in iPXE by default
      and exists ipxe.iscsi
        ) or (
          exists ipxe.efi
        )
      ) {
      filename "boot.ipxe";
} elsif option arch = 00:09 { # EFI BC
} elsif option arch = 00:08 { # EFI Xscale
} elsif option arch = 00:07 {
    # EFI x86-64 (Intel x86 64-bit EFI mode)
    # - most commonly used on newer hardware
    filename "ipxe-x64.efi";
    #filename "snponly-x64.efi";
} elsif option arch = 00:06 {
    # EFI IA32 (Intel x86 32-bit EFI mode)
    # - almost never seen in the wild
    filename "ipxe-x86.efi";
    #filename "snponly-x86.efi";
} elsif option arch = 00:05 { # Intel Lean Client
} elsif option arch = 00:04 { # Arc x86
} elsif option arch = 00:03 { # DEC Alpha
} elsif option arch = 00:02 { # EFI Itanium
} elsif option arch = 00:01 { # NEC/PC98
} else {
    # Intel x86PC (Intel x86 32-bit legacy BIOS mode)
    # - technically option arch = 00:00, but we use it as fallback
    filename "ipxe.kpxe";
    #filename "undionly.kpxe";
}